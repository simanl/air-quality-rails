version: '2'

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  forecasts-data:
    driver: local
  gems:
    driver: local

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge

services:
  # The postgres service will use a configured glusterfs storage pool on Rancher:
  postgres:
    image: vovimayhem/postgis:2.1.8-9.4.4
    tty: true
    stdin_open: true
    volumes: [ "postgres-data:/var/lib/postgresql/data" ]
    networks: [ "back-tier" ]
    environment:
      LC_ALL: C.UTF-8
    env_file: [ "postgres.env" ]

  # The Redis service will use a configured glusterfs storage pool on Rancher:
  redis:
    image: redis:3.0.7
    command: redis-server --appendonly yes
    tty: true
    stdin_open: true
    volumes: [ "redis-data:/var/lib/redis" ]
    networks: [ "back-tier" ]

  # The Forecasts Engine will use a configured glusterfs storage pool on Rancher:
  pronosticos:
    image: simanl/air-quality-forecasts:1.0.0.rc1
    tty: true
    stdin_open: true
    volumes: [ "forecasts-data:/app/tablas" ]
    networks: [ "back-tier" ]

  # The Job Processor app:
  tareas:
    image: simanl/air-quality-rails:v1.0.0.rc1
    command: sidekiq -c 25 -q default -q forecasts
    tty: true
    stdin_open: true
    networks: [ "back-tier" ]
    links:
      - redis:redis
      - postgres:postgres
      - pronosticos:pronosticos
    env_file: [ "app.env", "sidekiq.env" ]

  # The Web + API app:
  app-web:
    image: simanl/air-quality-rails:v1.0.0.rc1
    command: /usr/bin/supervisord --configuration=/usr/src/app/config/nginx-rails.conf
    tty: true
    stdin_open: true
    ports: [ "80:3000" ]
    networks: [ "front-tier", "back-tier" ]
    links:
      - redis:redis
      - postgres:postgres
    env_file: [ "app.env", "rails.env" ]
