version: '2'

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  forecasts-data:
    driver: local
  gems:
    driver: local

networks:
  front-tier:
    driver: bridge
  back-tier:
    driver: bridge

services:
  # Our PostgreSQL service:
  postgres:
    image: vovimayhem/postgis:2.1.8-9.4.4
    # Bind host port 5432 to PostgreSQL port 5432:
    ports: [ "5442:5432" ]
    # We're mounting 'db/dumps' into the postgres container so we can backup and
    # restore data dumps easily:
    volumes: [ "postgres-data:/var/lib/postgresql/data", "./db/dumps:/db/dumps:ro" ]
    networks: [ "back-tier" ]
    environment:
      LC_ALL: C.UTF-8
      POSTGRES_PASSWORD: 41rqu4l1ty

  # Our Redis service:
  redis:
    image: redis:3.0.7
    # Bind host port 6389 to Redis port 6379:
    ports: [ "6389:6379" ]
    command: redis-server --appendonly yes
    volumes: [ "redis-data:/var/lib/redis" ]
    networks: [ "back-tier" ]

  # The Forecasts Engine:
  forecasts:
    image: simanl/air-quality-forecasts:0-rc3
    volumes: [ "forecasts-data:/app/tablas", "./dev-engine-entrypoint.sh:/app/entrypoint.sh" ]
    entrypoint: /app/entrypoint.sh

  # Application: -----------------------------------------------------------------
  jobs: &app
    image: ruby:2.2.4
    entrypoint: /usr/src/app/dev-entrypoint.sh
    command: sidekiq -c 25 -q default -q forecasts
    volumes: [ "gems:/usr/local/bundle", ".:/usr/src/app" ]
    networks: [ "back-tier" ]
    working_dir: /usr/src/app
    stdin_open: true
    tty: true
    links:
      - postgres:postgres.calidad-aire.local
      - redis:redis.calidad-aire.local
      - forecasts:pronosticos.calidad-aire.local
    environment: &app_environment
      PATH: /usr/src/app/bin:/usr/local/bundle/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      DATABASE_URL: postgis://postgres:41rqu4l1ty@postgres.calidad-aire.local:5432/air_quality_development?pool=25&encoding=unicode&schema_search_path=public
      REDIS_URL: redis://redis.calidad-aire.local:6379/air_quality_development
      FORECAST_ENGINE_URL: tcp://pronosticos-engine.calidad-aire.local:6311 # The URL pointing to our engine container
      RAILS_ENV: development
    env_file: [ "dev.env" ]

  web:
    <<: *app
    ports: [ "3010:3000" ]
    networks: [ "front-tier", "back-tier" ]
    command: rails server -p 3000 -b 0.0.0.0

  # App Guard: Keeps running tests on a separate process:
  test:
    <<: *app # We copy from &app_base, and override:
    networks: [ "front-tier", "back-tier" ]
    command: guard start --no-bundler-warning --no-interactions --force-polling
    environment:
      <<: *app_environment
      DATABASE_URL: postgis://postgres:41rqu4l1ty@postgres.calidad-aire.local:5432/air_quality_test?pool=25&encoding=unicode&schema_search_path=public
      REDIS_URL: redis://redis.calidad-aire.local:6379/air_quality_test
      RACK_ENV: test
      RAILS_ENV: test
